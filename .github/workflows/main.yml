name: main

on:
  push:
    branches:
      - main
    paths-ignore:
      - README.md
      - LICENSE
      - docs/**
      - assets/**

jobs:
  build_test:
    name: "Build and Test"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      checks: write
      contents: read

    steps:
      - uses: actions/checkout@v5

      - name: Setup .NET
        uses: actions/setup-dotnet@v5

      - name: Install Required .NET Tools
        run: |
          dotnet new tool-manifest
          dotnet tool install dotnet-reportgenerator-globaltool
          dotnet tool install dotnet-coverage

      - name: Restore
        run: dotnet restore MinimalApiValidation.sln

      - name: Build
        run: dotnet build -c Release --no-restore MinimalApiValidation.sln

      - name: Test
        run: |
          dotnet test \
            -c Release \
            --no-restore \
            --no-build \
            --logger "trx;LogFileName=test-results.trx" \
            --collect:"XPlat Code Coverage" \
            --results-directory ./coverage \
            --verbosity normal

      # REPORTS

      - name: Generate Test Report
        uses: dorny/test-reporter@v2
        if: always()
        id: test_report
        with:
          name: Unit Tests Report
          path: "**/*.trx"
          reporter: dotnet-trx
          fail-on-error: true

      - name: Upload Test Report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: "**/*.trx"

      - name: Generate Coverage Report
        run: |
          dotnet reportgenerator \
            -reports:"**/coverage/**/coverage.cobertura.xml" \
            -targetdir:"./coverage/coveragereport" \
            -reporttypes:"MarkdownSummaryGithub;Html" \
            -title:"Test Coverage"

      - name: Upload Code Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: "**/coverage/coveragereport"
