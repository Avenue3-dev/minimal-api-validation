name: publish-package-workflow

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: true
        description: The release version number

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check for Existing Tag
        shell: bash {0}
        run: |
          VERSION=${{ github.event.inputs.version }}
          if [ $(git --no-pager tag -l "$VERSION") ]; then
              echo "Tag $VERSION already exists"
              exit 1
          fi
          exit 0

      - name: Restore
        run: dotnet restore MinimalApiValidation.sln

      - name: Build
        run: dotnet build -c Release --no-restore MinimalApiValidation.sln

      - name: Test
        run: dotnet test -c Release --no-restore --no-build

      - name: Pack
        run: dotnet pack -p:PackageVersion=${{ github.event.inputs.version }} -c Release -o ./.nupkgs

      - name: Publish NuGet
        run: |
          dotnet nuget push ./.nupkgs/*.nupkg \
            --api-key ${{ secrets.NUGET_API_KEY }} \
            --source https://api.nuget.org/v3/index.json \
            --skip-duplicate

      - name: Publish GitHub
        run: |
          dotnet nuget push ./.nupkgs/*.nupkg \
          --source 'https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json' \
          --api-key '${{ secrets.GITHUB_TOKEN }}' \
          --skip-duplicate

      - name: Initialize Mandatory Git Config
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com

      - name: Create and Push Tag
        shell: bash {0}
        run: |
          VERSION=v${{ github.event.inputs.version }}
          git tag $VERSION
          git push origin $VERSION
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
